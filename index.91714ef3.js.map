{"mappings":"qoBAAO,MAAMA,EAAO,CAClBC,QAASC,SAASC,cAAc,YAChCC,WAAYF,SAASC,cAAc,iBAInCE,KAAMH,SAASC,cAAc,kBAC7BG,OAAQJ,SAASC,cAAc,WAC/BI,SAAUL,SAASC,cAAc,SACjCK,YAAaN,SAASC,cAAc,YACpCM,KAAMP,SAASC,cAAc,uBAC7BO,WAAYR,SAASC,cAAc,sBACnCQ,WAAYT,SAASC,cAAc,iBACnCS,YAAaV,SAASC,cAAc,uBACpCU,oBAAqBX,SAASC,cAAc,4BAC5CW,qBAAsBZ,SAASC,cAAc,eAC7CY,mBAAoBb,SAASC,cAAc,aAC3Ca,WAAYd,SAASC,cAAc,iB,ICjBrCc,EAAA,SAgDAC,eAAeC,EAA2BC,GAEJ,MAA5BC,EAAaC,yBAAyBF,GAC5C,GAAIC,EAAWE,OAAS,EAAG,CAED,MAAhBC,EAAkBH,EAAWI,KAAIP,MAAMQ,IACzC,MAAMC,KAAEA,SAAeC,MAAMC,IACzB,sCAAsCH,aAAmBI,oBAAoBC,YAEjF,OAAOJ,CAAI,IAGTK,QAAeC,QAAQC,IAAIV,GACjCW,QAAQC,IAAIJ,GACZK,kCAAkCL,E,MAElCM,eAAeC,UAAY,E,CA5BhBzB,qBAAE0B,iBAAiB,SAAS,KAC3CrB,EAA2B,WAC3BL,qBAAqB2B,UAAUC,IAAI,eACnC3B,mBAAmB0B,UAAUE,OAAO,cAAc,IAInC5B,mBAAAyB,iBAAiB,SAAS,KACzCrB,EAA2B,SAC3BJ,mBAAmB0B,UAAUC,IAAI,eACjC5B,qBAAqB2B,UAAUE,OAAO,cAAc,IAyDnC,MAAfC,EAAQC,OAAOC,SAASC,SAC9BZ,QAAQC,IAAI,QAASQ,GACrBT,QAAQC,IAAI,kBAAmBS,OAAOC,UAGlCE,OAAOJ,GAEgBI,OAAhBJ,KAEPT,QAAQC,IAAI,mBAIoCa,SAA3CT,iBAAiB,SAAS,EAACU,OAAEA,MAE9BA,IAAWD,UACXA,SAASR,UAAUC,IAAI,aAIJ,WAAnBQ,EAAOC,SAAwBD,EAAOT,UAAUW,SAAS,gBACzDjB,QAAQC,IAAI,sBACZiB,sBAAsBH,EAAOI,QAAQC,IACrCC,2BAA2BN,IAIR,WAAnBA,EAAOC,SAAwBD,EAAOT,UAAUW,SAAS,cACzDjB,QAAQC,IAAI,oBACZqB,oBAAoBP,EAAOI,QAAQC,IACnCC,2BAA2BN,IAG/Bf,QAAQuB,IAAIR,EAAO,ICxIvBjC,EAAA","sources":["src/js/refs.js","src/js/header.js","src/js/pagination.js"],"sourcesContent":["export const refs = {\n  gallery: document.querySelector('.gallery'),\n  genresList: document.querySelector('.genres__list'),\n  // switchBtn: document.querySelector('.switch-btn'),\n  // switchBtnToggle: document.querySelector('.switch-btn::after'),\n  // body: document.querySelector('body'),\n  card: document.querySelector('.gallery__card'),\n  header: document.querySelector('.header'),\n  pageHome: document.querySelector('#home'),\n  pageLibrary: document.querySelector('#library'),\n  form: document.querySelector('.header__wrap--form'),\n  btnLibrary: document.querySelector('.header__wrap--btn'),\n  headerWrap: document.querySelector('.header__wrap'),\n  openOurTeam: document.querySelector('.footer__open-modal'),\n  libraryButtonsBlock: document.querySelector('.js-library-buttons-wrap'),\n  buttonLibraryWatched: document.querySelector('.js-watched'),\n  buttonLibraryQueue: document.querySelector('.js-queue'),\n  pagination: document.querySelector('.js-paginator'),\n};\n","import { refs } from './refs';\n\nexport function onTogglePage(e) {\n    onLibraryPageActive();\n}\n\nfunction onLibraryPageActive() {\n    if (refs.pageHome.classList.contains('current')) {\n        refs.pageHome.classList.toggle('current');\n        refs.header.classList.remove('header--home');\n        refs.pageLibrary.classList.add('current');\n        refs.header.classList.add('header--library');\n        onCreateLibraryPage();\n    }\n    if (onHomePageActive) {\n        return;\n    }\n}\nexport function startAddCurentClass() {\n    refs.pageHome.classList.add('current');\n}\n\nfunction onCreateLibraryPage() {\n    refs.form.classList.toggle('visually-hidden');\n    refs.btnLibrary.classList.toggle('visually-hidden');\n}\n\nexport function onHomePageActive() {\n    startAddCurentClass();\n    refs.pageLibrary.classList.remove('current');\n    refs.header.classList.remove('header--library');\n    refs.header.classList.add('header--home');\n    onCreateLibraryPage();\n}\n\n// Клик на кнопку  WATCHED в хедере\nbuttonLibraryWatched.addEventListener('click', () => {\n    showMoviesFromLocalstorage('watched');\n    buttonLibraryWatched.classList.add('highlighted');\n    buttonLibraryQueue.classList.remove('highlighted');\n});\n\n// Клик на кнопку  QUEUE в хедере\nbuttonLibraryQueue.addEventListener('click', () => {\n    showMoviesFromLocalstorage('queue');\n    buttonLibraryQueue.classList.add('highlighted');\n    buttonLibraryWatched.classList.remove('highlighted');\n});\nasync function showMoviesFromLocalstorage(keyOfStorage) {\n    //  показывает фильмы по ключу переменной в Localstorage\n    const queueArray = loadArayFromLocalStorage(keyOfStorage);\n    if (queueArray.length > 0) {\n        // проверка на пустой массив\n        const arrayOfPromises = queueArray.map(async movieId => {\n            const { data } = await axios.get(\n                `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`\n            );\n            return data;\n        });\n\n        const movies = await Promise.all(arrayOfPromises);\n        console.log(movies);\n        renderMoviesFromLocalstorageArray(movies);\n    } else {\n        movieContainer.innerHTML = '';\n    }\n}\n\nfunction library() {\n    displayElement(searchForm, false);\n    displayElement(libraryButtonsBlock, true);\n    showMoviesFromLocalstorage('queue');\n    setRoute('library', { mode: 'queue' });\n    highlighteHeaderButtons();\n}\n\n// подсветка кнопок (Watched queue) на странице my -library\nfunction highlighteHeaderButtons() {\n    // подсветка кнопок ЦФ\n    if (getRoute('mode') === 'queue') {\n        buttonLibraryQueue.classList.add('highlighted');\n    }\n    if (getRoute('mode') === 'watched') {\n        buttonLibraryWatched.classList.add('highlighted');\n    }\n}\n\nfunction getRoute(key) {\n    const params = new URLSearchParams(window.location.search);\n    return params.get(key);\n}\n\n//setRoute('/', { search: 'avatar' }).\nfunction setRoute(route, params) {\n    // Генерируем URL с параметрами\n    const searchParams = new URLSearchParams(params);\n    const url = `${route}?${searchParams.toString()}`;\n\n    // Задаем URL в строке браузера\n    window.history.pushState({}, '', url);\n}\n\n// Получаем текущий роут из URL\nconst route = window.location.pathname;\nconsole.log('ROUTE', route);\nconsole.log('window.location', window.location);\n\n// Проверяем, что у нас есть обработчик для этого роута\nif (routes[route]) {\n    // Вызываем обработчик роута\n    routes[route]();\n} else {\n    console.log('Route not found');\n}\n\n// обработчик кликов на бэкдропе, закрытие его, реакция на кнопки ...\nbackdrop.addEventListener('click', ({ target }) => {\n    // закрытие бэкдропа\n    if (target === backdrop) {\n        backdrop.classList.add('is-hidden');\n    }\n\n    // ловим нажатие на кнопку js-watched\n    if (target.tagName === 'BUTTON' && target.classList.contains('js-watched')) {\n        console.log('PRESSED js-watched');\n        addMovieToWatchedList(target.dataset.id);\n        renderBackdropButtonsState(target);\n    }\n\n    // ловим нажатие на кнопку js-queue\n    if (target.tagName === 'BUTTON' && target.classList.contains('js-queue')) {\n        console.log('PRESSED js-queue');\n        addMovieToQueueList(target.dataset.id);\n        renderBackdropButtonsState(target);\n    }\n    // в консоль выводим место куда нажали\n    console.dir(target);\n});","import { refs } from \"./refs\";\nexport function Pagination(e) {\n    let totalPages = 0;\n    let currentPage = 1;\n    let pageLinks = 5; //   количество кнопок ((нечетные числа, пример - 1 2 [3] 4 5))\n    const paginationRange = Math.floor(pageLinks / 2);\n    let startPaginationPage = 1;\n    let stopPaginationPage = pageLinks;\n\n    function gotoPage({ target }) {\n        if (target.tagName === 'BUTTON') {\n            currentPage = Number(target.dataset.gotopage);\n            setPageToUrl(currentPage);\n            getFilmsByUrl(getUrlFromSearchParam());\n        }\n    }\n    function displayPagination(response) {\n        let pages = [];\n\n        if (response.total_pages > 1) {\n            if (pageLinks >= response.total_pages) {\n                pageLinks = response.total_pages;\n            }\n\n            if (currentPage <= 1 + paginationRange) {\n                startPaginationPage = 1;\n                stopPaginationPage = pageLinks;\n            } else {\n                startPaginationPage = currentPage - paginationRange;\n\n                stopPaginationPage = currentPage + paginationRange;\n                if (stopPaginationPage > response.total_pages) {\n                    stopPaginationPage = response.total_pages;\n                }\n            }\n\n            if (currentPage > 1) {\n                pages.push(\n                    `<button data-gotopage=\"${currentPage - 1\n                    }\" class=\"pagination__button back\" type=\"button\"></button>`\n                );\n            }\n\n            for (let i = startPaginationPage; i <= stopPaginationPage; i += 1) {\n                console.log('🚀 ~ file: index.js:333 ~ i', i);\n\n                if (currentPage === i) {\n                    pages.push(\n                        `<button data-gotopage=\"${i}\" class=\"pagination__button current\" type=\"button\">${i}</button>`\n                    );\n                } else {\n                    pages.push(\n                        `<button data-gotopage=\"${i}\" class=\"pagination__button\" type=\"button\">${i}</button>`\n                    );\n                }\n            }\n\n            if (currentPage < response.total_pages) {\n                pages.push(\n                    `<button data-gotopage=\"${currentPage + 1\n                    }\" class=\"pagination__button forward\" type=\"button\"></button>`\n                );\n            }\n\n            pagination.innerHTML = pages.join('');\n        }\n    }\n}"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","gallery","document","querySelector","genresList","card","header","pageHome","pageLibrary","form","btnLibrary","headerWrap","openOurTeam","libraryButtonsBlock","buttonLibraryWatched","buttonLibraryQueue","pagination","parcelRequire","async","$8aad853c076397e7$var$showMoviesFromLocalstorage","keyOfStorage","queueArray","loadArayFromLocalStorage","length","arrayOfPromises","map","movieId","data","axios","get","API_KEY","LANGUAGE","movies","Promise","all","console","log","renderMoviesFromLocalstorageArray","movieContainer","innerHTML","addEventListener","classList","add","remove","$8aad853c076397e7$var$route","window","location","pathname","routes","backdrop","target","tagName","contains","addMovieToWatchedList","dataset","id","renderBackdropButtonsState","addMovieToQueueList","dir"],"version":3,"file":"index.91714ef3.js.map"}